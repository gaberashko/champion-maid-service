---
// Image Carousel
// ------------
// Description: An image carousel with preloaded images and glide functionality.

import "@glidejs/glide/dist/css/glide.core.min.css";
import "@glidejs/glide/dist/css/glide.theme.min.css";

const images = [
  `${import.meta.env.BASE_URL}about/before1.jpg`,
  `${import.meta.env.BASE_URL}about/after1.jpg`,
  `${import.meta.env.BASE_URL}about/before2.jpg`,
  `${import.meta.env.BASE_URL}about/after2.jpg`,
  `${import.meta.env.BASE_URL}about/before3.jpg`,
  `${import.meta.env.BASE_URL}about/after3_1.jpg`,
  `${import.meta.env.BASE_URL}about/after3_2.jpg`,
  `${import.meta.env.BASE_URL}about/before4_1.jpg`,
  `${import.meta.env.BASE_URL}about/before4_2.jpg`,
  `${import.meta.env.BASE_URL}about/before4_3.jpg`,
  `${import.meta.env.BASE_URL}about/before4_4.jpg`,
  `${import.meta.env.BASE_URL}about/after4_1.jpg`,
  `${import.meta.env.BASE_URL}about/after4_2.jpg`,
  `${import.meta.env.BASE_URL}about/after4_3.jpg`,
  `${import.meta.env.BASE_URL}about/after4_4.jpg`,
];
---

<div class="glide glide-04 w-full flex flex-col items-center">
  <div class="glide__track w-full max-w-[960px]" data-glide-el="track">
    <ul class="glide__slides">
      {images.map((src) => (
        <li class="glide__slide">
          <img src={src} alt="" class="block w-full h-auto object-contain" />
        </li>
      ))}
    </ul>
  </div>

  <div class="flex items-center justify-center w-full gap-2 p-4" data-glide-el="controls">
    <button data-glide-dir="<"
      class="inline-flex items-center justify-center w-8 h-8 lg:w-12 lg:h-12 border rounded-full">
      ‹
    </button>
    <button data-glide-dir=">"
      class="inline-flex items-center justify-center w-8 h-8 lg:w-12 lg:h-12 border rounded-full">
      ›
    </button>
  </div>
</div>

<script type="module">
  import Glide from "https://cdn.jsdelivr.net/npm/@glidejs/glide@3.6.0/dist/glide.esm.min.js";

  function mountGlide() {
    const el = document.querySelector(".glide-04");
    if (el && !el.dataset.glideMounted) {
      const glide = new Glide(".glide-04", {
        type: "carousel",
        focusAt: "center",
        perView: 4,
        gap: 20,
        autoplay: 3500,
        animationDuration: 700,
        breakpoints: {
          1024: { perView: 3 },
          640: { perView: 1 },
        },
      });
      glide.mount();
      el.dataset.glideMounted = "true"; // Prevent double init
    }
  }

  // Run on first page load
  mountGlide();

  // Run again after Astro navigates to this page
  document.addEventListener("astro:page-load", mountGlide);
</script>